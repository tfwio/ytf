<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FlatPlaylist" xml:space="preserve">
    <value>Do not extract the videos of a playlist, only list them.</value>
  </data>
  <data name="mAbortOnDuplicate" xml:space="preserve">
    <value>Abort on Duplicate (File Exists)</value>
  </data>
  <data name="mAddMetadata" xml:space="preserve">
    <value>Add MetaData</value>
  </data>
  <data name="mContinue" xml:space="preserve">
    <value>Continue Unfinished Downloads</value>
  </data>
  <data name="mDownloadTargets" xml:space="preserve">
    <value>Download Targets</value>
  </data>
  <data name="mEmbedSubs" xml:space="preserve">
    <value>Embed Subtitles</value>
  </data>
  <data name="mEmbedThumb" xml:space="preserve">
    <value>Embed Thumbnail</value>
  </data>
  <data name="mExplore" xml:space="preserve">
    <value>Explore to Target Directory</value>
  </data>
  <data name="mFlatPlaylist" xml:space="preserve">
    <value>Flat Playlist</value>
  </data>
  <data name="mGetPlaylist" xml:space="preserve">
    <value>Get Playlist</value>
  </data>
  <data name="mIgnoreErrors" xml:space="preserve">
    <value>Ignore Errors</value>
  </data>
  <data name="mOptions" xml:space="preserve">
    <value>youtube-dl flags</value>
  </data>
  <data name="mRemovePath" xml:space="preserve">
    <value>Remove Selected Target Directory</value>
  </data>
  <data name="msgAllreadyDownloaded" xml:space="preserve">
    <value>has already been downloaded</value>
  </data>
  <data name="msgCreateTsFail" xml:space="preserve">
    <value>The current target path was not stored to your set</value>
  </data>
  <data name="msgCreateTsFailCaption" xml:space="preserve">
    <value>nothing to remove</value>
  </data>
  <data name="msgCreateTsSuccessCaption" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="msgDownloadDestination" xml:space="preserve">
    <value>[download] Destination: </value>
  </data>
  <data name="msgDownloadHeading" xml:space="preserve">
    <value>[download] </value>
  </data>
  <data name="mShellFolders" xml:space="preserve">
    <value>Target: Shell-Folder</value>
  </data>
  <data name="mVerbose" xml:space="preserve">
    <value>Verbose</value>
  </data>
  <data name="mWriteAutoSub" xml:space="preserve">
    <value>Write: Auto Subtitles</value>
  </data>
  <data name="mWriteSubs" xml:space="preserve">
    <value>Write: Subtitles</value>
  </data>
  <data name="uriYoutubeDlHelp" xml:space="preserve">
    <value>https://raw.githubusercontent.com/rg3/youtube-dl/master/README.md</value>
  </data>
  <data name="Win32Native_NoExecutable_Msg" xml:space="preserve">
    <value>youtube-dl (or target executable) wasn't found.
&lt;to-fix&gt; Drag-Drop youtube-dl.exe back onto the app for it to be configured properly.</value>
  </data>
  <data name="Win32Native_NoWorkingDirectory_Msg" xml:space="preserve">
    <value>The target-directory (WorkPath) wasn't found.\n&lt;to-fix&gt; Select another target (output) path.</value>
  </data>
  <data name="mAddMetaDataTip" xml:space="preserve">
    <value>Write metadata to the video file</value>
  </data>
  <data name="mContinueTip" xml:space="preserve">
    <value>&lt;Note&gt; Here, if this is not enabled, we will use the --no-continue Flag.

Force resume of partially downloaded files.
By default, youtube-dl will resume downloads if possible.</value>
  </data>
  <data name="mEmbedSubsTip" xml:space="preserve">
    <value>Embed subtitles in the video (only for mp4, webm and mkv videos)</value>
  </data>
  <data name="mEmbedThumbTip" xml:space="preserve">
    <value>Embed thumbnail in the audio as cover art</value>
  </data>
  <data name="mGetPlaylistTip" xml:space="preserve">
    <value>Download the playlist, if the URL refers to a video and a playlist.</value>
  </data>
  <data name="mIgnoreErrorsTip" xml:space="preserve">
    <value>Continue on download errors, for example to skip unavailable videos in a playlist</value>
  </data>
  <data name="mPreferFFmpeg" xml:space="preserve">
    <value>Prefer FFmpeg</value>
  </data>
  <data name="mPreferFFmpegTip" xml:space="preserve">
    <value>Prefer ffmpeg over avconv for running the postprocessors</value>
  </data>
  <data name="mVerboseTip" xml:space="preserve">
    <value>Print various debugging information</value>
  </data>
  <data name="mWriteAnnotations" xml:space="preserve">
    <value>Write: Annotations</value>
  </data>
  <data name="mWriteAnnotationsTip" xml:space="preserve">
    <value>Write: video annotations to a .annotations.xml file
[youtube]</value>
  </data>
  <data name="mWriteAutoSubTip" xml:space="preserve">
    <value>Write: automatically generated subtitle file
[youtube]</value>
  </data>
  <data name="mWriteSubsTip" xml:space="preserve">
    <value>Write subtitle file</value>
  </data>
  <data name="bin" xml:space="preserve">
    <value>bin</value>
  </data>
  <data name="ConfDefault" xml:space="preserve">
    <value>config.ini</value>
  </data>
  <data name="ExploreToFile" xml:space="preserve">
    <value>/e,/select,"$path$"</value>
  </data>
  <data name="ExploreToPath" xml:space="preserve">
    <value>/e,"$path$"</value>
    <comment>for CommandKeyHandler Ctrl+E</comment>
  </data>
  <data name="ShowHelp" xml:space="preserve">
    <value>A helper for running youtube-dl</value>
  </data>
  <data name="UserDownloads" xml:space="preserve">
    <value>%USERPROFILE%\Downloads</value>
  </data>
  <data name="mExtractAudio" xml:space="preserve">
    <value>Extract Audio</value>
  </data>
  <data name="mExtractAudioTip" xml:space="preserve">
    <value>Convert video files to audio-only files (requires ffmpeg or avconv and ffprobe or avprobe)</value>
  </data>
  <data name="mMaxDownloads" xml:space="preserve">
    <value>Maximum Number of Downloads</value>
  </data>
  <data name="mMaxDownloadsTip" xml:space="preserve">
    <value>Abort after downloading NUMBER files
[Where NUMBER is set by changing the value in the tool-strip below the 'address-bar' in the application]</value>
  </data>
  <data name="msgUserAbort" xml:space="preserve">
    <value>User canceled
&lt;WARNING&gt; Incomplete files likely remain
</value>
  </data>
  <data name="mSimulate" xml:space="preserve">
    <value>Simulate</value>
  </data>
  <data name="mSimulateTip" xml:space="preserve">
    <value>Do not download the video and do not write anything to disk</value>
  </data>
</root>