 DrumSynthPlug.cpp | 29 +++++++++++++++++------------
 1 file changed, 17 insertions(+), 12 deletions(-)

diff --git a/DrumSynthPlug.cpp b/DrumSynthPlug.cpp
index 530b98a..44d15fa 100644
--- a/DrumSynthPlug.cpp
+++ b/DrumSynthPlug.cpp
@@ -253,8 +253,9 @@ void DrumSynthPlug::InitializeParams()
   // - tone
   GetParam(dpp::ds_pgm_ton_on)         ->   InitBool         ("T:on",       true);
   GetParam(dpp::ds_pgm_ton_levl)       ->   InitInt          ("T:level",       0, 0, 181);
-  GetParam(dpp::ds_pgm_ton_f1)         ->   InitDouble       ("T:f1", 75, 0., 1000000., 1.0, "Hz");
-  GetParam(dpp::ds_pgm_ton_f2)         ->   InitDouble       ("T:f2", 110, 0., 1000000., 1.0, "Hz");
+  // freq-tone
+  GetParam(dpp::ds_pgm_ton_f1)         ->   InitDouble       ("T:f1", 0.000075, 0., 1., 0.0000001, "Hz");
+  GetParam(dpp::ds_pgm_ton_f2)         ->   InitDouble       ("T:f2", 0.000110, 0., 1., 0.0000001, "Hz");
   GetParam(dpp::ds_pgm_ton_droop)      ->   InitInt          ("T:droop", 1, 0, 100);
   GetParam(dpp::ds_pgm_ton_phase)      ->   InitDouble       ("T:phase", 0., -360.0, 360.0, 10.0, "%");
   // - overtone
@@ -265,8 +266,9 @@ void DrumSynthPlug::InitializeParams()
   GetParam(dpp::ds_pgm_ovt_meth)       ->   SetDisplayText   (1, on::ds::str::opm[1].c_str());
   GetParam(dpp::ds_pgm_ovt_meth)       ->   SetDisplayText   (2, on::ds::str::opm[2].c_str());
   GetParam(dpp::ds_pgm_ovt_meth)       ->   SetDisplayText   (3, on::ds::str::opm[3].c_str());
-  GetParam(dpp::ds_pgm_ovt_f1)         ->   InitDouble       ("O:f1", 440., 0., 1000000., 0.01, "Hz");
-  GetParam(dpp::ds_pgm_ovt_f2)         ->   InitDouble       ("O:f2", 220., 0., 1000000., 0.01, "Hz");
+  // freq-overtones
+  GetParam(dpp::ds_pgm_ovt_f1)         ->   InitDouble       ("O:f1", 0.000440, 0., 1., 0.0000001, "Hz");
+  GetParam(dpp::ds_pgm_ovt_f2)         ->   InitDouble       ("O:f2", .000220, 0., 1., 0.0000001, "Hz");
   GetParam(dpp::ds_pgm_ovt_filter)     ->   InitBool         ("O:filter", 0);
   GetParam(dpp::ds_pgm_ovt_track1)     ->   InitBool         ("O:track1", 0);
   GetParam(dpp::ds_pgm_ovt_track2)     ->   InitBool         ("O:track2", 0);
@@ -290,16 +292,19 @@ void DrumSynthPlug::InitializeParams()
   // band 1
   GetParam(dpp::ds_pgm_nb1_on)         ->   InitBool         ("B1:on", true);
   GetParam(dpp::ds_pgm_nb1_level)      ->   InitInt          ("B1:level", 0, 0, 181);
-  GetParam(dpp::ds_pgm_nb1_f)          ->   InitDouble       ("B1:f", 440., 0., 1000000., 0.01, "%");
+  // freq-noise band one
+  GetParam(dpp::ds_pgm_nb1_f)          ->   InitDouble       ("B1:f", .000440, 0., 1., 0.0000001, "%");
   GetParam(dpp::ds_pgm_nb1_dF)         ->   InitInt          ("B1:df", 0, 0, 100);
   // band 2
   GetParam(dpp::ds_pgm_nb2_on)         ->   InitBool         ("B2:on", false);
   GetParam(dpp::ds_pgm_nb2_level)      ->   InitInt          ("B2:level", 0, 0, 181);
-  GetParam(dpp::ds_pgm_nb2_f)          ->   InitDouble       ("B2:f", 880., 0., 1000000., 0.01, "%");
+  // freq-noise band two
+  GetParam(dpp::ds_pgm_nb2_f)          ->   InitDouble       ("B2:f", 0.00088, 0., 1., 0.0000001, "%");
   GetParam(dpp::ds_pgm_nb2_dF)         ->   InitInt          ("B2:df", 0, 0, 100);
   // distortion
   GetParam(dpp::ds_pgm_dis_on)         ->   InitBool         ("D:on", true);
   GetParam(dpp::ds_pgm_dis_rate)       ->   InitEnum         ("D:rate", 0, 8); // these three we need table for
+
   GetParam(dpp::ds_pgm_dis_rate)       ->   SetDisplayText   (0, on::ds::str::df[0].c_str());
   GetParam(dpp::ds_pgm_dis_rate)       ->   SetDisplayText   (1, on::ds::str::df[1].c_str());
   GetParam(dpp::ds_pgm_dis_rate)       ->   SetDisplayText   (2, on::ds::str::df[2].c_str());
@@ -346,8 +351,8 @@ void DrumSynthPlug::OnParamChange(int paramIdx)
   { // there are 37 thus far of 43 total?
   case dpp::ds_pgm_ton_on:       layer->dsActive.tn.on        = GetParam(dpp::ds_pgm_ton_on)->Bool(); if (!TEST_UI) update_tone_on(); mControlGroups.refresh(this, dpp::ds_pgm_ton_on); break;
   case dpp::ds_pgm_ton_levl:     layer->dsActive.tn.level     = GetParam(dpp::ds_pgm_ton_levl)->Value(); break;
-  case dpp::ds_pgm_ton_f1:       layer->dsActive.tn.f1        = GetParam(dpp::ds_pgm_ton_f1)->Value(); break;
-  case dpp::ds_pgm_ton_f2:       layer->dsActive.tn.f2        = GetParam(dpp::ds_pgm_ton_f2)->Value(); break;
+  case dpp::ds_pgm_ton_f1:       layer->dsActive.tn.f1        = 1000000.*GetParam(dpp::ds_pgm_ton_f1)->Value(); break;
+  case dpp::ds_pgm_ton_f2:       layer->dsActive.tn.f2        = 1000000.*GetParam(dpp::ds_pgm_ton_f2)->Value(); break;
   case dpp::ds_pgm_ton_droop:    layer->dsActive.tn.droop     = GetParam(dpp::ds_pgm_ton_droop)->Int(); break;
   case dpp::ds_pgm_gen_level:    layer->dsActive.gn.level     = GetParam(dpp::ds_pgm_gen_level)->Int(); break;
   case dpp::ds_pgm_gen_reso:     layer->dsActive.gn.resonance = GetParam(dpp::ds_pgm_gen_reso)->Int(); break;
@@ -362,8 +367,8 @@ void DrumSynthPlug::OnParamChange(int paramIdx)
   case dpp::ds_pgm_ovt_on:       layer->dsActive.ot.on        = GetParam(dpp::ds_pgm_ovt_on)->Bool(); mControlGroups.refresh(this, dpp::ds_pgm_ovt_on); break;
   case dpp::ds_pgm_ovt_level:    layer->dsActive.ot.level     = GetParam(dpp::ds_pgm_ovt_level)->Int(); break;
   case dpp::ds_pgm_ovt_meth:     layer->dsActive.ot.method    = GetParam(dpp::ds_pgm_ovt_meth)->Int(); break;
-  case dpp::ds_pgm_ovt_f1:       layer->dsActive.ot.f1        = GetParam(dpp::ds_pgm_ovt_f1)->Value(); break;
-  case dpp::ds_pgm_ovt_f2:       layer->dsActive.ot.f2        = GetParam(dpp::ds_pgm_ovt_f2)->Value(); break;
+  case dpp::ds_pgm_ovt_f1:       layer->dsActive.ot.f1        = 1000000.*GetParam(dpp::ds_pgm_ovt_f1)->Value(); break;
+  case dpp::ds_pgm_ovt_f2:       layer->dsActive.ot.f2        = 1000000.*GetParam(dpp::ds_pgm_ovt_f2)->Value(); break;
   case dpp::ds_pgm_ovt_filter:   layer->dsActive.ot.filter    = GetParam(dpp::ds_pgm_ovt_filter)->Bool(); break;
   case dpp::ds_pgm_ovt_track1:   layer->dsActive.ot.track1    = GetParam(dpp::ds_pgm_ovt_track1)->Bool(); break;
   case dpp::ds_pgm_ovt_track2:   layer->dsActive.ot.track2    = GetParam(dpp::ds_pgm_ovt_track2)->Bool(); break;
@@ -372,11 +377,11 @@ void DrumSynthPlug::OnParamChange(int paramIdx)
   case dpp::ds_pgm_ovt_para:     layer->dsActive.ot.param     = GetParam(dpp::ds_pgm_ovt_para)->Int(); break;
   case dpp::ds_pgm_nb1_on:       layer->dsActive.nb1.on       = GetParam(dpp::ds_pgm_nb1_on)->Bool(); mControlGroups.refresh(this, dpp::ds_pgm_nb1_on); break;
   case dpp::ds_pgm_nb1_level:    layer->dsActive.nb1.level    = GetParam(dpp::ds_pgm_nb1_level)->Int(); break;
-  case dpp::ds_pgm_nb1_f:        layer->dsActive.nb1.f        = GetParam(dpp::ds_pgm_nb1_f)->Value(); break;
+  case dpp::ds_pgm_nb1_f:        layer->dsActive.nb1.f        = 1000000.*GetParam(dpp::ds_pgm_nb1_f)->Value(); break;
   case dpp::ds_pgm_nb1_dF:       layer->dsActive.nb1.df       = GetParam(dpp::ds_pgm_nb1_dF)->Int(); break;
   case dpp::ds_pgm_nb2_on:       layer->dsActive.nb2.on       = GetParam(dpp::ds_pgm_nb2_on)->Bool(); mControlGroups.refresh(this, dpp::ds_pgm_nb2_on); break;
   case dpp::ds_pgm_nb2_level:    layer->dsActive.nb2.level    = GetParam(dpp::ds_pgm_nb2_level)->Int(); break;
-  case dpp::ds_pgm_nb2_f:        layer->dsActive.nb2.f        = GetParam(dpp::ds_pgm_nb2_f)->Value(); break;
+  case dpp::ds_pgm_nb2_f:        layer->dsActive.nb2.f        = 1000000.*GetParam(dpp::ds_pgm_nb2_f)->Value(); break;
   case dpp::ds_pgm_nb2_dF:       layer->dsActive.nb2.df       = GetParam(dpp::ds_pgm_nb2_dF)->Int(); break;
   case dpp::ds_pgm_dis_on:       layer->dsActive.dt.on        = GetParam(dpp::ds_pgm_dis_on)->Bool(); mControlGroups.refresh(this, dpp::ds_pgm_dis_on); break;
   case dpp::ds_pgm_dis_rate:     layer->dsActive.dt.rate      = GetParam(dpp::ds_pgm_dis_rate)->Int(); break;
